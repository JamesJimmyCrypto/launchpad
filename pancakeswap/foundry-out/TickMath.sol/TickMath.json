{"abi":[{"type":"error","name":"InvalidSqrtRatio","inputs":[]},{"type":"error","name":"InvalidTick","inputs":[]}],"bytecode":{"object":"0x6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220eb56e0c1924b0d7a09baa74fb4073b19f1ddce05507e5cc4e9c5cb6fe17efacb64736f6c63430008180033","sourceMap":"340:12182:40:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x5f80fdfea2646970667358221220eb56e0c1924b0d7a09baa74fb4073b19f1ddce05507e5cc4e9c5cb6fe17efacb64736f6c63430008180033","sourceMap":"340:12182:40:-:0;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidSqrtRatio\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTick\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_SQRT_RATIO_MINUS_MIN_SQRT_RATIO_MINUS_ONE\":{\"details\":\"A threshold used for optimized bounds check, equals `MAX_SQRT_RATIO - MIN_SQRT_RATIO - 1`\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidSqrtRatio()\":[{\"notice\":\"Thrown when the ratio passed to #getTickAtSqrtRatio does not correspond to a price between MIN_TICK and MAX_TICK\"}],\"InvalidTick()\":[{\"notice\":\"Thrown when the tick passed to #getSqrtRatioAtTick is not between MIN_TICK and MAX_TICK\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/pancake-v4-core/src/pool-cl/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pancakeswap/v4-core/=lib/pancake-v4-core/\",\":@pancakeswap/v4-periphery/=lib/pancake-v4-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/pancake-v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pancake-v4-core/=lib/pancake-v4-core/\",\":pancake-v4-periphery/=lib/pancake-v4-periphery/\",\":prb-math/=lib/prb-math/src/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/pancake-v4-core/src/pool-cl/libraries/TickMath.sol\":{\"keccak256\":\"0xc6f2471ea74a0f37f93ed333fdaa007b457efba69247d72344a6b6c964ff6776\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://be0d7b827c0e107a2a42a50ac0df7173f8f95e5538b76fb9aa26b488b1e52f2a\",\"dweb:/ipfs/QmaZXzozphEt6sYPTzJ8nzdSdmZZ3RiE8jYSTX248QZz8G\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InvalidSqrtRatio"},{"inputs":[],"type":"error","name":"InvalidTick"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@pancakeswap/v4-core/=lib/pancake-v4-core/","@pancakeswap/v4-periphery/=lib/pancake-v4-periphery/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/pancake-v4-core/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","pancake-v4-core/=lib/pancake-v4-core/","pancake-v4-periphery/=lib/pancake-v4-periphery/","prb-math/=lib/prb-math/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/pancake-v4-core/src/pool-cl/libraries/TickMath.sol":"TickMath"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/pancake-v4-core/src/pool-cl/libraries/TickMath.sol":{"keccak256":"0xc6f2471ea74a0f37f93ed333fdaa007b457efba69247d72344a6b6c964ff6776","urls":["bzz-raw://be0d7b827c0e107a2a42a50ac0df7173f8f95e5538b76fb9aa26b488b1e52f2a","dweb:/ipfs/QmaZXzozphEt6sYPTzJ8nzdSdmZZ3RiE8jYSTX248QZz8G"],"license":"GPL-2.0-or-later"}},"version":1},"id":40}