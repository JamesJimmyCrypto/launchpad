{"abi":[{"type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PERMIT_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"WETH9","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"burn","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"collect","inputs":[{"name":"params","type":"tuple","internalType":"struct INonfungiblePositionManager.CollectParams","components":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount0Max","type":"uint128","internalType":"uint128"},{"name":"amount1Max","type":"uint128","internalType":"uint128"}]}],"outputs":[{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"decreaseLiquidity","inputs":[{"name":"params","type":"tuple","internalType":"struct INonfungiblePositionManager.DecreaseLiquidityParams","components":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"amount0Min","type":"uint256","internalType":"uint256"},{"name":"amount1Min","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"getApproved","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"operator","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"increaseLiquidity","inputs":[{"name":"params","type":"tuple","internalType":"struct INonfungiblePositionManager.IncreaseLiquidityParams","components":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"amount0Desired","type":"uint256","internalType":"uint256"},{"name":"amount1Desired","type":"uint256","internalType":"uint256"},{"name":"amount0Min","type":"uint256","internalType":"uint256"},{"name":"amount1Min","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"initialize","inputs":[{"name":"poolKey","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"hooks","type":"address","internalType":"contract IHooks"},{"name":"poolManager","type":"address","internalType":"contract IPoolManager"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"parameters","type":"bytes32","internalType":"bytes32"}]},{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"tick","type":"int24","internalType":"int24"}],"stateMutability":"payable"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lockAcquired","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"mint","inputs":[{"name":"params","type":"tuple","internalType":"struct INonfungiblePositionManager.MintParams","components":[{"name":"poolKey","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"hooks","type":"address","internalType":"contract IHooks"},{"name":"poolManager","type":"address","internalType":"contract IPoolManager"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"parameters","type":"bytes32","internalType":"bytes32"}]},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"amount0Desired","type":"uint256","internalType":"uint256"},{"name":"amount1Desired","type":"uint256","internalType":"uint256"},{"name":"amount0Min","type":"uint256","internalType":"uint256"},{"name":"amount1Min","type":"uint256","internalType":"uint256"},{"name":"recipient","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"ownerOf","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"owner","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"permit","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"poolManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract ICLPoolManager"}],"stateMutability":"view"},{"type":"function","name":"positions","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"nonce","type":"uint96","internalType":"uint96"},{"name":"operator","type":"address","internalType":"address"},{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"feeGrowthInside0LastX128","type":"uint256","internalType":"uint256"},{"name":"feeGrowthInside1LastX128","type":"uint256","internalType":"uint256"},{"name":"tokensOwed0","type":"uint128","internalType":"uint128"},{"name":"tokensOwed1","type":"uint128","internalType":"uint128"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"tokenByIndex","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"tokenOfOwnerByIndex","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"tokenURI","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"vault","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IVault"}],"stateMutability":"view"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Collect","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"recipient","type":"address","indexed":false,"internalType":"address"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"DecreaseLiquidity","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"liquidity","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"IncreaseLiquidity","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"liquidity","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"InvalidCalldataType","inputs":[]},{"type":"error","name":"InvalidLiquidityDecreaseAmount","inputs":[]},{"type":"error","name":"InvalidMaxCollectAmount","inputs":[]},{"type":"error","name":"InvalidTokenID","inputs":[]},{"type":"error","name":"NonEmptyPosition","inputs":[]},{"type":"error","name":"NonexistentToken","inputs":[]},{"type":"error","name":"NotOwnerOrOperator","inputs":[]},{"type":"error","name":"OnlyVaultCaller","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","PERMIT_TYPEHASH()":"30adf81f","WETH9()":"4aa4a4fc","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","collect((uint256,address,uint128,uint128))":"fc6f7865","decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":"0c49ccbe","getApproved(uint256)":"081812fc","increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":"219f5d17","initialize((address,address,address,address,uint24,bytes32),uint160,bytes)":"222bb36b","isApprovedForAll(address,address)":"e985e9c5","lockAcquired(bytes)":"ab6291fe","mint(((address,address,address,address,uint24,bytes32),int24,int24,bytes32,uint256,uint256,uint256,uint256,address,uint256))":"c12a1ef7","name()":"06fdde03","ownerOf(uint256)":"6352211e","permit(address,uint256,uint256,uint8,bytes32,bytes32)":"7ac2ff7b","poolManager()":"dc4c90d3","positions(uint256)":"99fbab88","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","vault()":"fbfa77cf"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCalldataType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLiquidityDecreaseAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxCollectAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonEmptyPosition\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerOrOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyVaultCaller\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"internalType\":\"contract IPoolManager\",\"name\":\"poolManager\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"bytes32\",\"name\":\"parameters\",\"type\":\"bytes32\"}],\"internalType\":\"struct PoolKey\",\"name\":\"poolKey\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"lockAcquired\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"internalType\":\"contract IPoolManager\",\"name\":\"poolManager\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"bytes32\",\"name\":\"parameters\",\"type\":\"bytes32\"}],\"internalType\":\"struct PoolKey\",\"name\":\"poolKey\",\"type\":\"tuple\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract ICLPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens,\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"initialize((address,address,address,address,uint24,bytes32),uint160,bytes)\":{\"details\":\"Call this when the pool does not exist and is not initialized.\",\"params\":{\"hookData\":\"Hook data for the pool\",\"poolKey\":\"The pool key\",\"sqrtPriceX96\":\"The initial sqrt price of the pool\"},\"returns\":{\"tick\":\"Pool tick\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"lockAcquired(bytes)\":{\"params\":{\"data\":\"The data that was passed to the call to lock\"},\"returns\":{\"_0\":\"Any data that you want to be returned from the lock call\"}},\"mint(((address,address,address,address,uint24,bytes32),int24,int24,bytes32,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"poolManager()\":{\"returns\":{\"_0\":\"Returns the address of the PancakeSwap V4 pool manager\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"vault()\":{\"returns\":{\"_0\":\"Returns the address of the PancakeSwap V4 vault\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects the fees owed to a specific position to the recipient\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"initialize((address,address,address,address,uint24,bytes32),uint160,bytes)\":{\"notice\":\"Initialize the pool state for a given pool ID.\"},\"lockAcquired(bytes)\":{\"notice\":\"Called by the pool manager on `msg.sender` when a lock is acquired\"},\"mint(((address,address,address,address,uint24,bytes32),int24,int24,bytes32,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"}},\"notice\":\"Wraps PancakeSwap V4 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/pancake-v4-periphery/src/pool-cl/interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pancakeswap/v4-core/=lib/pancake-v4-core/\",\":@pancakeswap/v4-periphery/=lib/pancake-v4-periphery/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/pancake-v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pancake-v4-core/=lib/pancake-v4-core/\",\":pancake-v4-periphery/=lib/pancake-v4-periphery/\",\":prb-math/=lib/prb-math/src/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/pancake-v4-core/src/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xd21325930292346a3d8ccd787a3c1f2e96da5af5b8b1871f3230ef40a2dfb080\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adc2083a73040d486be24418b86bd46380aaac7a06923d8a3b1675d6a03d0f99\",\"dweb:/ipfs/QmVE6sj6CBdR1tus2aYQoRTKFtjGaUufZN2C9QV88birgc\"]},\"lib/pancake-v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x3d53e46aa25ce2d777c4cf5f3e9be60fbccbc981eb82fc532dc1d15a43d55571\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3be7ceb8489f8c010b48202f62c87382f8724df49ba9a0551a7d7a6fa1d5dd97\",\"dweb:/ipfs/Qme7JNv2MaTTcWj9xNUbru8m6zaPe1smS63CWuxDsQsfjg\"]},\"lib/pancake-v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x1a47a0c52d038f3f231de66c7d558fc6dfc663f4b24c6e95bef922423cfdc027\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb2792b93a6601ba00141245e8101bd35c91df2d7e13e8cc31966ed85fde291a\",\"dweb:/ipfs/QmTihJz4NjA1G4217v58LaBYwLo5xaMXyLGUrbaFKXRLDd\"]},\"lib/pancake-v4-core/src/interfaces/ILockCallback.sol\":{\"keccak256\":\"0xb65613a1af3d5cc9210cdaa71081a118b3fd729927d2344e01038959b94187ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e82a64f3628e923c38656c35d597336e209fad1c2412dbd096ca263763a2e38\",\"dweb:/ipfs/QmXxfn9qoLmZRckicBgmpiwmbnX9BtkG4fxAFb5u3mzLPp\"]},\"lib/pancake-v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x5b909dcddd6280ca0dba6d5ddc949c1640ee11dfcf8edfd67c030aaee34a7ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd7bcfa9a82e175e55600e8e8a0dc7f840cb2c9df4414b9c8cfb94eb7971bb9\",\"dweb:/ipfs/QmaFZ6DUUAWiv7W8vA4kbfinAQFm4xpjQNk5kdtCwnLbdT\"]},\"lib/pancake-v4-core/src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0x7502c38037f85e346698512868e1914ef492180ffcff44af678faaa9dc0fff8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://359ac49c79c98ed4e870b20e2f9c7e82565eef08b9fc3223d096843676d37c1e\",\"dweb:/ipfs/QmcSpRGsTaQYsGyeSPpd7NNm5t3GtAEBdzjJqDEKLke3Fo\"]},\"lib/pancake-v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0xd3823d05c5c0df31c8453c664bbde1d7db9175160b70b9033f3543e828719e24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dff2aa922de86f480b85dd4e62bb82c7c7c84cf87af437176dc0f4cda057bbe0\",\"dweb:/ipfs/QmPRdStYjLrkZgdqeTy3e2thj4anFZ47pYyqjTvHxMxHH2\"]},\"lib/pancake-v4-core/src/interfaces/IVault.sol\":{\"keccak256\":\"0x31673494ff60d61195f98ec2f5ea0a212856f6f1d31b435c9d39d73a18524990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55a19205c0359f2cc2bca4ac98914645dd20e5a08b558ff5a49c5d8f21e624a8\",\"dweb:/ipfs/QmUKwCsmEinpSZ4tqZVJRXSUPJV8XWfRxatSW13PD8HAXM\"]},\"lib/pancake-v4-core/src/interfaces/IVaultToken.sol\":{\"keccak256\":\"0xd797ac4079da85c7a567113387e28c80e7500f4d86c8135db8de95abdf5c6e99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3aef9e38b91d5c8dae9f6c363e29cab77b761a69ceee9fbd24403154a03b8660\",\"dweb:/ipfs/QmeiSkKB2M5knX5JB7rUiCNoVXAmxpm5VWumeStrDjBFDB\"]},\"lib/pancake-v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0x962cc1b00638253695594abc1caa5d4da18273cd84217da996477963a05b3094\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee3f288d2f31b729e79d846547aa4a5511651d0d80d88f802fb46526b34cd74d\",\"dweb:/ipfs/QmPBkrvfFPDJdgk17VvFrrXaPnt14bSCpdRK5ivSmQxjcY\"]},\"lib/pancake-v4-core/src/libraries/ProtocolFeeLibrary.sol\":{\"keccak256\":\"0xf1f8d1a4ba1f72ae4a840a5cd55856367cea053d3a202fd79f5249cc3e610e46\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://45e54c129642e3363588d3769524a9e88031c8e4b994dc4ef371f146182f354e\",\"dweb:/ipfs/QmWEsRU7uEqtmAWGfEmaSmc4uSo7wJEmyJRQHVa9Mn3ATQ\"]},\"lib/pancake-v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x9cbb4deefa6484fc1118d9ae72d722e71814b348731d7076692ae50b9031f0d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0e3bd73a57b9615f5d2ccbbca9929bc06878319e9ae2766db20d19a32e78853\",\"dweb:/ipfs/Qmbk8uduYAzdLB2oEnzhaMjcxxMmpgyaYAcHZ7wU3nUrBZ\"]},\"lib/pancake-v4-core/src/libraries/math/UnsafeMath.sol\":{\"keccak256\":\"0x9c6bfcc302b192f497c563cd1d57093cb490510680f10b9eeea6fb40e8b89d71\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ffe2b29e2a16f2887a99521f1ee52fe6ad7929f775c8a8ffd32e4c62b56429cb\",\"dweb:/ipfs/QmRSb4wcRcdGVNVAF8GjAPnjChzVdY934wgLuGyju3C6Tn\"]},\"lib/pancake-v4-core/src/pool-cl/interfaces/ICLPoolManager.sol\":{\"keccak256\":\"0x30a853b35f5846bd674bee534ea19cf6e8714f52b1a1b13f056d42e013f4dac6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0d830e16e0506fa6ded295b38c990bd3fa8205bfd4892eeeb2c8721fe98945\",\"dweb:/ipfs/QmYAZ238EkH6yafwq76BsvCQqHQC6pVRgC1wMMQwQLTeZR\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/BitMath.sol\":{\"keccak256\":\"0x66c454a22a5ba6cd4b59192080a52ef97cca8806497f7712310e56757603604d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4f5d152c3179ef8bde19ebb82604a8cbec1260d2c13a41ce715d185298c5cc61\",\"dweb:/ipfs/QmYTZa2PXxdqcqtk5X1jvg4VunogcMF6NSjLjurNEyav1x\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/CLPool.sol\":{\"keccak256\":\"0x19094ebc1efb7d7c4c05fd2053b0e9b2fcc8d248b12b32939c3d88aae6faf772\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://73b860ebfed707c435ff15a3f15c2f79e20d8e5ff462c62827e7e1975db42c4a\",\"dweb:/ipfs/QmNVkYMWtQhhByrCUxvkomeMpgYPzREhytKN3KDBXM6aBq\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/CLPosition.sol\":{\"keccak256\":\"0xb1083d2e32d5c74f4f507f8c2539d31af06383d61d91e19ae5d3811e0dee52f9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f39d6d9597c90565a8cd5f210e4339bf990223fa68e4b8c52557247969a8a52\",\"dweb:/ipfs/QmejJLcNN7RKS6H98RWjbPpcQng9nxxxekW8TwTMrY1VNG\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x55d1efee27d9e43b3d94cea311c82aed7f9b1c6adfe67b7b7bf50211c8cd8186\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9d383cb4e7b54482d1dc5fe6e466432901552619250eaf4f25e0b33629586db\",\"dweb:/ipfs/QmTpwkQBQPREn6gYBPaPcCo5JMkKWw8hiMEUNnTbe6x93v\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xe4e810eb2dbbc159ee558743bd68e99662ab4fcfc60d9f1c787b08e3a2992a3a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9e2f028c2518196aaa508a3b15b071a7617c1a9bbb22ef4a1571a5231e41a7f0\",\"dweb:/ipfs/QmUqe3ZFxVpRvGxPyNsfsNLHLXaJQdurJBC8tRL3WhcXj6\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/FullMath.sol\":{\"keccak256\":\"0x102f3a0ba93563dea4131780da10ed68064a33de7ba92cbe68b358257062d095\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://611705765c92c83806033f874c3bc72046e6dc4980fe136820a3238f47766ddc\",\"dweb:/ipfs/QmSfiG3kMgCuJodjH7HSMpL4XxWTMonyavc5i6MjACB4NN\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x1238e1912412efa4e15f68e70b1df03daf83f4a19c61daaf29f7405d93ac83bd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6a299ad777e405f17f5d7d45dc47813a75913aac87b4d82338aa1887776fa89b\",\"dweb:/ipfs/QmXKvYFzyvGpc82t6wdhGGAnxs1xpNxfPHm3RoegBPE3pB\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0x4cb6f33e9cdb7be747eaaf6ae2903723fe134e2096d673cded5bd0456608347c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bb191ce7cb78bdcf8c847b90b41be05639f6f14489a1d26f3d47b4b423d606dd\",\"dweb:/ipfs/QmNnu4M77Uy7ATrzo6MavdckMvqM1jLcHkVfTHwWaPQkfm\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/SwapMath.sol\":{\"keccak256\":\"0x688504482bda7e32fd9beb1458d9b5a85580dcf28f3b22526b38c105740dcada\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://599199f355464eb9f582b5e257149b4f587a1ac1de175b074c681038d8afcf6f\",\"dweb:/ipfs/QmeBqjPi6et4HC6H71kK8Q5ZVtkCjvmeWMgBMwhU5cyhby\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/Tick.sol\":{\"keccak256\":\"0xac684375ed3172cc8088adb522e2b53b331b1cc6d5b8160eb3552a64e56a57e4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://21ba0cd32de0c117f31afcb8636f7f33ff15c41fb9fe964cbaedc743d92c86d8\",\"dweb:/ipfs/QmSYNqJV93hWhHmFbNPaUaYFNxdxy9LHKtLc8RM5khjpdF\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/TickBitmap.sol\":{\"keccak256\":\"0x3f1a77829ed7a3b23fa4800bb165afb39bf5beafe8ae3530edfabf1c2b73106d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0c8dbb4adcfa0c977ec145378ef5c6abfcd8a18809cf7f4accd4885620aef31\",\"dweb:/ipfs/QmUvbARn3dLHQLyd626YWwMHyDBCtimvnxArvfMYeaqBmE\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/TickMath.sol\":{\"keccak256\":\"0xc6f2471ea74a0f37f93ed333fdaa007b457efba69247d72344a6b6c964ff6776\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://be0d7b827c0e107a2a42a50ac0df7173f8f95e5538b76fb9aa26b488b1e52f2a\",\"dweb:/ipfs/QmaZXzozphEt6sYPTzJ8nzdSdmZZ3RiE8jYSTX248QZz8G\"]},\"lib/pancake-v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xe0cbcbc0e9aef0d26a9ef50842a520bf12119b719b6e069fd962acb8ef7b5f11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72d77b9250591d710f7c2dd96c4f4726eeabb715241ab95e3c31904886d046e3\",\"dweb:/ipfs/Qmbg4NurmaaUsNtppbotGHhmLx4mZCnCmFw6Aaf6jNb5ye\"]},\"lib/pancake-v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x0397802dd803c0597f1901730205d88a2f8bc477e8e01dec4388b10657fd6612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec69282d8f1aed08727b2aef64312acb70f53e7cc7eccc987d7c1a1763bcbe90\",\"dweb:/ipfs/QmcYVAvNgUegatJpj36jP2ZwUFAEB8vaPU6HPXR9zT2xJ8\"]},\"lib/pancake-v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x97edd77c22b437593e308eb69ba4784c0f29b838d2eda4736062e052cdf97de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec8b9814de701ff4d33993e93ecdbc766464296326a642740e8ea286d0d57c3c\",\"dweb:/ipfs/Qmdn5YXLggxU42sBtAUzWzChqx2ZaiAQPcH3d3LF7k5gyK\"]},\"lib/pancake-v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0x8bd3aed0b084a2212fde0da30545f6b1ebe3cfee0cc37b0b6f86672014344579\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b434855923c5751ede1760408f38ccdc756f87e9be09b451bbc2743f0ec81501\",\"dweb:/ipfs/QmarGBR8SJGK4fWkmiESn4tJUKR6yRUyy6DJxJkpEEi1gk\"]},\"lib/pancake-v4-periphery/src/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0xf6a4aa3cb6cf4b4daecd328d83bcc9f620b041b7aa99d8c58f9d9141df93c87b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://418689bcb364fa4081ea8d0d85e192bf4d311efb0af3bc1dd44682a94c38ec31\",\"dweb:/ipfs/QmYTzvoPAnLQ25gD4fuP4UyurFUd6kZJDyoLeceG2tPL8X\"]},\"lib/pancake-v4-periphery/src/pool-cl/interfaces/ICLPeripheryImmutableState.sol\":{\"keccak256\":\"0xff19f0fd912258dd07f79407c192f13e1f61fccff4ff42667cacf9b0b5eb5999\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://147c145887ec569b5da415652b91bd24c6108a330e615610b96dee1870f1da55\",\"dweb:/ipfs/QmbuTZEh9b2tYXGYCvemYNVEEZNxyrkqgFg2dCgWkdHEQG\"]},\"lib/pancake-v4-periphery/src/pool-cl/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x5458fb8341d70214eb5266dbb163b6147bcde27a8fd23042285c1a9db6c14e91\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://72357909a9fd385c16ab48f83adb3233a6993e2d04685903415edb9443ac8f57\",\"dweb:/ipfs/QmXhLTfC8CzeG3GcbBXhM6AFm5VWdrFYcG3DDAGitsrKdV\"]},\"lib/pancake-v4-periphery/src/pool-cl/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xf1454bc059ff58cf254ef1d7296601ba8f4908502f30dd48df25433b703c0931\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bb0bff74c3ae6ff57fe8fa4bfde9ab9529123ce4d6c047156aa41fc5c38c3728\",\"dweb:/ipfs/QmTUuqefCKE4mXGaNtsPgv5D5ftCijLe75VbmEES9Tfwwb\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InvalidCalldataType"},{"inputs":[],"type":"error","name":"InvalidLiquidityDecreaseAmount"},{"inputs":[],"type":"error","name":"InvalidMaxCollectAmount"},{"inputs":[],"type":"error","name":"InvalidTokenID"},{"inputs":[],"type":"error","name":"NonEmptyPosition"},{"inputs":[],"type":"error","name":"NonexistentToken"},{"inputs":[],"type":"error","name":"NotOwnerOrOperator"},{"inputs":[],"type":"error","name":"OnlyVaultCaller"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"approved","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"bool","name":"approved","type":"bool","indexed":false}],"type":"event","name":"ApprovalForAll","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"address","name":"recipient","type":"address","indexed":false},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false}],"type":"event","name":"Collect","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"uint128","name":"liquidity","type":"uint128","indexed":false},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false}],"type":"event","name":"DecreaseLiquidity","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"uint128","name":"liquidity","type":"uint128","indexed":false},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false}],"type":"event","name":"IncreaseLiquidity","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"payable","type":"function","name":"burn"},{"inputs":[{"internalType":"struct INonfungiblePositionManager.CollectParams","name":"params","type":"tuple","components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Max","type":"uint128"},{"internalType":"uint128","name":"amount1Max","type":"uint128"}]}],"stateMutability":"payable","type":"function","name":"collect","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[{"internalType":"struct INonfungiblePositionManager.DecreaseLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"decreaseLiquidity","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}]},{"inputs":[{"internalType":"struct INonfungiblePositionManager.IncreaseLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"increaseLiquidity","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[{"internalType":"struct PoolKey","name":"poolKey","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"contract IHooks","name":"hooks","type":"address"},{"internalType":"contract IPoolManager","name":"poolManager","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"bytes32","name":"parameters","type":"bytes32"}]},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"payable","type":"function","name":"initialize","outputs":[{"internalType":"int24","name":"tick","type":"int24"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"lockAcquired","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"struct INonfungiblePositionManager.MintParams","name":"params","type":"tuple","components":[{"internalType":"struct PoolKey","name":"poolKey","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"contract IHooks","name":"hooks","type":"address"},{"internalType":"contract IPoolManager","name":"poolManager","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"bytes32","name":"parameters","type":"bytes32"}]},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"mint","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"permit"},{"inputs":[],"stateMutability":"view","type":"function","name":"poolManager","outputs":[{"internalType":"contract ICLPoolManager","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"positions","outputs":[{"internalType":"uint96","name":"nonce","type":"uint96"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setApprovalForAll"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom"},{"inputs":[],"stateMutability":"view","type":"function","name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"returns":{"_0":"The domain seperator used in encoding of permit signature"}},"PERMIT_TYPEHASH()":{"returns":{"_0":"The typehash for the permit"}},"WETH9()":{"returns":{"_0":"Returns the address of WETH9"}},"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"burn(uint256)":{"params":{"tokenId":"The ID of the token that is being burned"}},"collect((uint256,address,uint128,uint128))":{"params":{"params":"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens,"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":{"params":{"params":"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"},"returns":{"amount0":"The amount of token0 accounted to the position's tokens owed","amount1":"The amount of token1 accounted to the position's tokens owed"}},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":{"params":{"params":"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"},"returns":{"amount0":"The amount of token0 to acheive resulting liquidity","amount1":"The amount of token1 to acheive resulting liquidity","liquidity":"The new liquidity amount as a result of the increase"}},"initialize((address,address,address,address,uint24,bytes32),uint160,bytes)":{"details":"Call this when the pool does not exist and is not initialized.","params":{"hookData":"Hook data for the pool","poolKey":"The pool key","sqrtPriceX96":"The initial sqrt price of the pool"},"returns":{"tick":"Pool tick"}},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"lockAcquired(bytes)":{"params":{"data":"The data that was passed to the call to lock"},"returns":{"_0":"Any data that you want to be returned from the lock call"}},"mint(((address,address,address,address,uint24,bytes32),int24,int24,bytes32,uint256,uint256,uint256,uint256,address,uint256))":{"details":"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.","params":{"params":"The params necessary to mint a position, encoded as `MintParams` in calldata"},"returns":{"amount0":"The amount of token0","amount1":"The amount of token1","liquidity":"The amount of liquidity for this position","tokenId":"The ID of the token that represents the minted position"}},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"permit(address,uint256,uint256,uint8,bytes32,bytes32)":{"params":{"deadline":"The deadline timestamp by which the call must be mined for the approve to work","r":"Must produce valid secp256k1 signature from the holder along with `v` and `s`","s":"Must produce valid secp256k1 signature from the holder along with `r` and `v`","spender":"The account that is being approved","tokenId":"The ID of the token that is being approved for spending","v":"Must produce valid secp256k1 signature from the holder along with `r` and `s`"}},"poolManager()":{"returns":{"_0":"Returns the address of the PancakeSwap V4 pool manager"}},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."},"vault()":{"returns":{"_0":"Returns the address of the PancakeSwap V4 vault"}}},"version":1},"userdoc":{"kind":"user","methods":{"DOMAIN_SEPARATOR()":{"notice":"The domain separator used in the permit signature"},"PERMIT_TYPEHASH()":{"notice":"The permit typehash used in the permit signature"},"burn(uint256)":{"notice":"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."},"collect((uint256,address,uint128,uint128))":{"notice":"Collects the fees owed to a specific position to the recipient"},"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":{"notice":"Decreases the amount of liquidity in a position and accounts it to the position"},"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":{"notice":"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"},"initialize((address,address,address,address,uint24,bytes32),uint160,bytes)":{"notice":"Initialize the pool state for a given pool ID."},"lockAcquired(bytes)":{"notice":"Called by the pool manager on `msg.sender` when a lock is acquired"},"mint(((address,address,address,address,uint24,bytes32),int24,int24,bytes32,uint256,uint256,uint256,uint256,address,uint256))":{"notice":"Creates a new position wrapped in a NFT"},"permit(address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Approve of a specific token ID for spending by spender via signature"},"positions(uint256)":{"notice":"Returns the position information associated with a given token ID."}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@pancakeswap/v4-core/=lib/pancake-v4-core/","@pancakeswap/v4-periphery/=lib/pancake-v4-periphery/","@prb/math/=lib/prb-math/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/pancake-v4-core/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","pancake-v4-core/=lib/pancake-v4-core/","pancake-v4-periphery/=lib/pancake-v4-periphery/","prb-math/=lib/prb-math/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/pancake-v4-periphery/src/pool-cl/interfaces/INonfungiblePositionManager.sol":"INonfungiblePositionManager"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266","urls":["bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4","dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"keccak256":"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf","urls":["bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34","dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9","urls":["bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146","dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1","urls":["bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f","dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IERC20Minimal.sol":{"keccak256":"0xd21325930292346a3d8ccd787a3c1f2e96da5af5b8b1871f3230ef40a2dfb080","urls":["bzz-raw://adc2083a73040d486be24418b86bd46380aaac7a06923d8a3b1675d6a03d0f99","dweb:/ipfs/QmVE6sj6CBdR1tus2aYQoRTKFtjGaUufZN2C9QV88birgc"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IExtsload.sol":{"keccak256":"0x3d53e46aa25ce2d777c4cf5f3e9be60fbccbc981eb82fc532dc1d15a43d55571","urls":["bzz-raw://3be7ceb8489f8c010b48202f62c87382f8724df49ba9a0551a7d7a6fa1d5dd97","dweb:/ipfs/Qme7JNv2MaTTcWj9xNUbru8m6zaPe1smS63CWuxDsQsfjg"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IHooks.sol":{"keccak256":"0x1a47a0c52d038f3f231de66c7d558fc6dfc663f4b24c6e95bef922423cfdc027","urls":["bzz-raw://eb2792b93a6601ba00141245e8101bd35c91df2d7e13e8cc31966ed85fde291a","dweb:/ipfs/QmTihJz4NjA1G4217v58LaBYwLo5xaMXyLGUrbaFKXRLDd"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/ILockCallback.sol":{"keccak256":"0xb65613a1af3d5cc9210cdaa71081a118b3fd729927d2344e01038959b94187ad","urls":["bzz-raw://9e82a64f3628e923c38656c35d597336e209fad1c2412dbd096ca263763a2e38","dweb:/ipfs/QmXxfn9qoLmZRckicBgmpiwmbnX9BtkG4fxAFb5u3mzLPp"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IPoolManager.sol":{"keccak256":"0x5b909dcddd6280ca0dba6d5ddc949c1640ee11dfcf8edfd67c030aaee34a7ad2","urls":["bzz-raw://3cd7bcfa9a82e175e55600e8e8a0dc7f840cb2c9df4414b9c8cfb94eb7971bb9","dweb:/ipfs/QmaFZ6DUUAWiv7W8vA4kbfinAQFm4xpjQNk5kdtCwnLbdT"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IProtocolFeeController.sol":{"keccak256":"0x7502c38037f85e346698512868e1914ef492180ffcff44af678faaa9dc0fff8a","urls":["bzz-raw://359ac49c79c98ed4e870b20e2f9c7e82565eef08b9fc3223d096843676d37c1e","dweb:/ipfs/QmcSpRGsTaQYsGyeSPpd7NNm5t3GtAEBdzjJqDEKLke3Fo"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IProtocolFees.sol":{"keccak256":"0xd3823d05c5c0df31c8453c664bbde1d7db9175160b70b9033f3543e828719e24","urls":["bzz-raw://dff2aa922de86f480b85dd4e62bb82c7c7c84cf87af437176dc0f4cda057bbe0","dweb:/ipfs/QmPRdStYjLrkZgdqeTy3e2thj4anFZ47pYyqjTvHxMxHH2"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IVault.sol":{"keccak256":"0x31673494ff60d61195f98ec2f5ea0a212856f6f1d31b435c9d39d73a18524990","urls":["bzz-raw://55a19205c0359f2cc2bca4ac98914645dd20e5a08b558ff5a49c5d8f21e624a8","dweb:/ipfs/QmUKwCsmEinpSZ4tqZVJRXSUPJV8XWfRxatSW13PD8HAXM"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IVaultToken.sol":{"keccak256":"0xd797ac4079da85c7a567113387e28c80e7500f4d86c8135db8de95abdf5c6e99","urls":["bzz-raw://3aef9e38b91d5c8dae9f6c363e29cab77b761a69ceee9fbd24403154a03b8660","dweb:/ipfs/QmeiSkKB2M5knX5JB7rUiCNoVXAmxpm5VWumeStrDjBFDB"],"license":"MIT"},"lib/pancake-v4-core/src/libraries/LPFeeLibrary.sol":{"keccak256":"0x962cc1b00638253695594abc1caa5d4da18273cd84217da996477963a05b3094","urls":["bzz-raw://ee3f288d2f31b729e79d846547aa4a5511651d0d80d88f802fb46526b34cd74d","dweb:/ipfs/QmPBkrvfFPDJdgk17VvFrrXaPnt14bSCpdRK5ivSmQxjcY"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/libraries/ProtocolFeeLibrary.sol":{"keccak256":"0xf1f8d1a4ba1f72ae4a840a5cd55856367cea053d3a202fd79f5249cc3e610e46","urls":["bzz-raw://45e54c129642e3363588d3769524a9e88031c8e4b994dc4ef371f146182f354e","dweb:/ipfs/QmWEsRU7uEqtmAWGfEmaSmc4uSo7wJEmyJRQHVa9Mn3ATQ"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/libraries/SafeCast.sol":{"keccak256":"0x9cbb4deefa6484fc1118d9ae72d722e71814b348731d7076692ae50b9031f0d1","urls":["bzz-raw://f0e3bd73a57b9615f5d2ccbbca9929bc06878319e9ae2766db20d19a32e78853","dweb:/ipfs/Qmbk8uduYAzdLB2oEnzhaMjcxxMmpgyaYAcHZ7wU3nUrBZ"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/libraries/math/UnsafeMath.sol":{"keccak256":"0x9c6bfcc302b192f497c563cd1d57093cb490510680f10b9eeea6fb40e8b89d71","urls":["bzz-raw://ffe2b29e2a16f2887a99521f1ee52fe6ad7929f775c8a8ffd32e4c62b56429cb","dweb:/ipfs/QmRSb4wcRcdGVNVAF8GjAPnjChzVdY934wgLuGyju3C6Tn"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/interfaces/ICLPoolManager.sol":{"keccak256":"0x30a853b35f5846bd674bee534ea19cf6e8714f52b1a1b13f056d42e013f4dac6","urls":["bzz-raw://fd0d830e16e0506fa6ded295b38c990bd3fa8205bfd4892eeeb2c8721fe98945","dweb:/ipfs/QmYAZ238EkH6yafwq76BsvCQqHQC6pVRgC1wMMQwQLTeZR"],"license":"MIT"},"lib/pancake-v4-core/src/pool-cl/libraries/BitMath.sol":{"keccak256":"0x66c454a22a5ba6cd4b59192080a52ef97cca8806497f7712310e56757603604d","urls":["bzz-raw://4f5d152c3179ef8bde19ebb82604a8cbec1260d2c13a41ce715d185298c5cc61","dweb:/ipfs/QmYTZa2PXxdqcqtk5X1jvg4VunogcMF6NSjLjurNEyav1x"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/CLPool.sol":{"keccak256":"0x19094ebc1efb7d7c4c05fd2053b0e9b2fcc8d248b12b32939c3d88aae6faf772","urls":["bzz-raw://73b860ebfed707c435ff15a3f15c2f79e20d8e5ff462c62827e7e1975db42c4a","dweb:/ipfs/QmNVkYMWtQhhByrCUxvkomeMpgYPzREhytKN3KDBXM6aBq"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/CLPosition.sol":{"keccak256":"0xb1083d2e32d5c74f4f507f8c2539d31af06383d61d91e19ae5d3811e0dee52f9","urls":["bzz-raw://7f39d6d9597c90565a8cd5f210e4339bf990223fa68e4b8c52557247969a8a52","dweb:/ipfs/QmejJLcNN7RKS6H98RWjbPpcQng9nxxxekW8TwTMrY1VNG"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/FixedPoint128.sol":{"keccak256":"0x55d1efee27d9e43b3d94cea311c82aed7f9b1c6adfe67b7b7bf50211c8cd8186","urls":["bzz-raw://f9d383cb4e7b54482d1dc5fe6e466432901552619250eaf4f25e0b33629586db","dweb:/ipfs/QmTpwkQBQPREn6gYBPaPcCo5JMkKWw8hiMEUNnTbe6x93v"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/FixedPoint96.sol":{"keccak256":"0xe4e810eb2dbbc159ee558743bd68e99662ab4fcfc60d9f1c787b08e3a2992a3a","urls":["bzz-raw://9e2f028c2518196aaa508a3b15b071a7617c1a9bbb22ef4a1571a5231e41a7f0","dweb:/ipfs/QmUqe3ZFxVpRvGxPyNsfsNLHLXaJQdurJBC8tRL3WhcXj6"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/FullMath.sol":{"keccak256":"0x102f3a0ba93563dea4131780da10ed68064a33de7ba92cbe68b358257062d095","urls":["bzz-raw://611705765c92c83806033f874c3bc72046e6dc4980fe136820a3238f47766ddc","dweb:/ipfs/QmSfiG3kMgCuJodjH7HSMpL4XxWTMonyavc5i6MjACB4NN"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/LiquidityMath.sol":{"keccak256":"0x1238e1912412efa4e15f68e70b1df03daf83f4a19c61daaf29f7405d93ac83bd","urls":["bzz-raw://6a299ad777e405f17f5d7d45dc47813a75913aac87b4d82338aa1887776fa89b","dweb:/ipfs/QmXKvYFzyvGpc82t6wdhGGAnxs1xpNxfPHm3RoegBPE3pB"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/SqrtPriceMath.sol":{"keccak256":"0x4cb6f33e9cdb7be747eaaf6ae2903723fe134e2096d673cded5bd0456608347c","urls":["bzz-raw://bb191ce7cb78bdcf8c847b90b41be05639f6f14489a1d26f3d47b4b423d606dd","dweb:/ipfs/QmNnu4M77Uy7ATrzo6MavdckMvqM1jLcHkVfTHwWaPQkfm"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/SwapMath.sol":{"keccak256":"0x688504482bda7e32fd9beb1458d9b5a85580dcf28f3b22526b38c105740dcada","urls":["bzz-raw://599199f355464eb9f582b5e257149b4f587a1ac1de175b074c681038d8afcf6f","dweb:/ipfs/QmeBqjPi6et4HC6H71kK8Q5ZVtkCjvmeWMgBMwhU5cyhby"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/Tick.sol":{"keccak256":"0xac684375ed3172cc8088adb522e2b53b331b1cc6d5b8160eb3552a64e56a57e4","urls":["bzz-raw://21ba0cd32de0c117f31afcb8636f7f33ff15c41fb9fe964cbaedc743d92c86d8","dweb:/ipfs/QmSYNqJV93hWhHmFbNPaUaYFNxdxy9LHKtLc8RM5khjpdF"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/TickBitmap.sol":{"keccak256":"0x3f1a77829ed7a3b23fa4800bb165afb39bf5beafe8ae3530edfabf1c2b73106d","urls":["bzz-raw://a0c8dbb4adcfa0c977ec145378ef5c6abfcd8a18809cf7f4accd4885620aef31","dweb:/ipfs/QmUvbARn3dLHQLyd626YWwMHyDBCtimvnxArvfMYeaqBmE"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/TickMath.sol":{"keccak256":"0xc6f2471ea74a0f37f93ed333fdaa007b457efba69247d72344a6b6c964ff6776","urls":["bzz-raw://be0d7b827c0e107a2a42a50ac0df7173f8f95e5538b76fb9aa26b488b1e52f2a","dweb:/ipfs/QmaZXzozphEt6sYPTzJ8nzdSdmZZ3RiE8jYSTX248QZz8G"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/types/BalanceDelta.sol":{"keccak256":"0xe0cbcbc0e9aef0d26a9ef50842a520bf12119b719b6e069fd962acb8ef7b5f11","urls":["bzz-raw://72d77b9250591d710f7c2dd96c4f4726eeabb715241ab95e3c31904886d046e3","dweb:/ipfs/Qmbg4NurmaaUsNtppbotGHhmLx4mZCnCmFw6Aaf6jNb5ye"],"license":"MIT"},"lib/pancake-v4-core/src/types/Currency.sol":{"keccak256":"0x0397802dd803c0597f1901730205d88a2f8bc477e8e01dec4388b10657fd6612","urls":["bzz-raw://ec69282d8f1aed08727b2aef64312acb70f53e7cc7eccc987d7c1a1763bcbe90","dweb:/ipfs/QmcYVAvNgUegatJpj36jP2ZwUFAEB8vaPU6HPXR9zT2xJ8"],"license":"MIT"},"lib/pancake-v4-core/src/types/PoolId.sol":{"keccak256":"0x97edd77c22b437593e308eb69ba4784c0f29b838d2eda4736062e052cdf97de9","urls":["bzz-raw://ec8b9814de701ff4d33993e93ecdbc766464296326a642740e8ea286d0d57c3c","dweb:/ipfs/Qmdn5YXLggxU42sBtAUzWzChqx2ZaiAQPcH3d3LF7k5gyK"],"license":"MIT"},"lib/pancake-v4-core/src/types/PoolKey.sol":{"keccak256":"0x8bd3aed0b084a2212fde0da30545f6b1ebe3cfee0cc37b0b6f86672014344579","urls":["bzz-raw://b434855923c5751ede1760408f38ccdc756f87e9be09b451bbc2743f0ec81501","dweb:/ipfs/QmarGBR8SJGK4fWkmiESn4tJUKR6yRUyy6DJxJkpEEi1gk"],"license":"MIT"},"lib/pancake-v4-periphery/src/interfaces/IPeripheryImmutableState.sol":{"keccak256":"0xf6a4aa3cb6cf4b4daecd328d83bcc9f620b041b7aa99d8c58f9d9141df93c87b","urls":["bzz-raw://418689bcb364fa4081ea8d0d85e192bf4d311efb0af3bc1dd44682a94c38ec31","dweb:/ipfs/QmYTzvoPAnLQ25gD4fuP4UyurFUd6kZJDyoLeceG2tPL8X"],"license":"MIT"},"lib/pancake-v4-periphery/src/pool-cl/interfaces/ICLPeripheryImmutableState.sol":{"keccak256":"0xff19f0fd912258dd07f79407c192f13e1f61fccff4ff42667cacf9b0b5eb5999","urls":["bzz-raw://147c145887ec569b5da415652b91bd24c6108a330e615610b96dee1870f1da55","dweb:/ipfs/QmbuTZEh9b2tYXGYCvemYNVEEZNxyrkqgFg2dCgWkdHEQG"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-periphery/src/pool-cl/interfaces/IERC721Permit.sol":{"keccak256":"0x5458fb8341d70214eb5266dbb163b6147bcde27a8fd23042285c1a9db6c14e91","urls":["bzz-raw://72357909a9fd385c16ab48f83adb3233a6993e2d04685903415edb9443ac8f57","dweb:/ipfs/QmXhLTfC8CzeG3GcbBXhM6AFm5VWdrFYcG3DDAGitsrKdV"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-periphery/src/pool-cl/interfaces/INonfungiblePositionManager.sol":{"keccak256":"0xf1454bc059ff58cf254ef1d7296601ba8f4908502f30dd48df25433b703c0931","urls":["bzz-raw://bb0bff74c3ae6ff57fe8fa4bfde9ab9529123ce4d6c047156aa41fc5c38c3728","dweb:/ipfs/QmTUuqefCKE4mXGaNtsPgv5D5ftCijLe75VbmEES9Tfwwb"],"license":"GPL-2.0-or-later"}},"version":1},"id":111}