{"abi":[{"type":"function","name":"DYNAMIC_FEE_FLAG","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"ONE_HUNDRED_PERCENT_FEE","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"OVERRIDE_FEE_FLAG","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"OVERRIDE_MASK","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"TEN_PERCENT_FEE","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"error","name":"FeeTooLarge","inputs":[]}],"bytecode":{"object":"0x608080604052346100195760f8908161001e823930815050f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c9081633b01d64d1460ad5750806369a50da91460965780636f3888f514607f578063c1d217e91460685763f26ef49d14604d575f80fd5b5f3660031901126064576020604051628000008152f35b5f80fd5b5f3660031901126064576020604051620186a08152f35b5f3660031901126064576020604051620f42408152f35b5f366003190112606457602060405162bfffff8152f35b5f366003190112606457806240000060209252f3fea2646970667358221220480e508d11bc5515d444e0de12541bc1140807a14f28f59e6b40481e28bdc8cb64736f6c63430008180033","sourceMap":"453:2114:16:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60808060405260043610156011575f80fd5b5f3560e01c9081633b01d64d1460ad5750806369a50da91460965780636f3888f514607f578063c1d217e91460685763f26ef49d14604d575f80fd5b5f3660031901126064576020604051628000008152f35b5f80fd5b5f3660031901126064576020604051620186a08152f35b5f3660031901126064576020604051620f42408152f35b5f366003190112606457602060405162bfffff8152f35b5f366003190112606457806240000060209252f3fea2646970667358221220480e508d11bc5515d444e0de12541bc1140807a14f28f59e6b40481e28bdc8cb64736f6c63430008180033","sourceMap":"453:2114:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;453:2114:16;;;;;;;813:8;453:2114;;;;;;;;;;-1:-1:-1;;453:2114:16;;;;;;;1318:7;453:2114;;;;;;-1:-1:-1;;453:2114:16;;;;;;;1262:9;453:2114;;;;;;-1:-1:-1;;453:2114:16;;;;;;;687:8;453:2114;;;;;;-1:-1:-1;;453:2114:16;;;;;1071:8;453:2114;;;","linkReferences":{}},"methodIdentifiers":{"DYNAMIC_FEE_FLAG()":"f26ef49d","ONE_HUNDRED_PERCENT_FEE()":"6f3888f5","OVERRIDE_FEE_FLAG()":"3b01d64d","OVERRIDE_MASK()":"69a50da9","TEN_PERCENT_FEE()":"c1d217e9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DYNAMIC_FEE_FLAG\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE_HUNDRED_PERCENT_FEE\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OVERRIDE_FEE_FLAG\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OVERRIDE_MASK\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEN_PERCENT_FEE\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Library for handling lp fee setting from `PoolKey.fee` It can be either static or dynamic, and upper 4 bits are used to store the flag: 1. if the flag is set, then the fee is dynamic, it can be set and updated by hook 2. otherwise if the flag is not set, then the fee is static, and the lower 20 bits are used to store the fee\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ONE_HUNDRED_PERCENT_FEE\":{\"details\":\"the fee is represented in hundredths of a bipthe max fee for cl pool is 100% and for bin, it is 10%\"},\"OVERRIDE_MASK\":{\"details\":\"the flag and mask\"}},\"version\":1},\"userdoc\":{\"errors\":{\"FeeTooLarge()\":[{\"notice\":\"Thrown when the static/dynamic fee on a pool exceeds 100%.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/pancake-v4-core/src/libraries/LPFeeLibrary.sol\":\"LPFeeLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pancakeswap/v4-core/=lib/pancake-v4-core/\",\":@pancakeswap/v4-periphery/=lib/pancake-v4-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/pancake-v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pancake-v4-core/=lib/pancake-v4-core/\",\":pancake-v4-periphery/=lib/pancake-v4-periphery/\",\":prb-math/=lib/prb-math/src/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/pancake-v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0x962cc1b00638253695594abc1caa5d4da18273cd84217da996477963a05b3094\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee3f288d2f31b729e79d846547aa4a5511651d0d80d88f802fb46526b34cd74d\",\"dweb:/ipfs/QmPBkrvfFPDJdgk17VvFrrXaPnt14bSCpdRK5ivSmQxjcY\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"FeeTooLarge"},{"inputs":[],"stateMutability":"view","type":"function","name":"DYNAMIC_FEE_FLAG","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"ONE_HUNDRED_PERCENT_FEE","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"OVERRIDE_FEE_FLAG","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"OVERRIDE_MASK","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"TEN_PERCENT_FEE","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@pancakeswap/v4-core/=lib/pancake-v4-core/","@pancakeswap/v4-periphery/=lib/pancake-v4-periphery/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/pancake-v4-core/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","pancake-v4-core/=lib/pancake-v4-core/","pancake-v4-periphery/=lib/pancake-v4-periphery/","prb-math/=lib/prb-math/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/pancake-v4-core/src/libraries/LPFeeLibrary.sol":"LPFeeLibrary"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/pancake-v4-core/src/libraries/LPFeeLibrary.sol":{"keccak256":"0x962cc1b00638253695594abc1caa5d4da18273cd84217da996477963a05b3094","urls":["bzz-raw://ee3f288d2f31b729e79d846547aa4a5511651d0d80d88f802fb46526b34cd74d","dweb:/ipfs/QmPBkrvfFPDJdgk17VvFrrXaPnt14bSCpdRK5ivSmQxjcY"],"license":"GPL-2.0-or-later"}},"version":1},"id":16}